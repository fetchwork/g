definitions:
  model.AddProviderReply:
    properties:
      message:
        type: string
      name:
        type: string
      status:
        type: string
    type: object
  model.AddRoute:
    properties:
      cost:
        type: number
      description:
        type: string
      pid:
        type: integer
      prefix:
        type: string
      step:
        type: integer
    type: object
  model.CDRReport:
    properties:
      bill_summ:
        type: number
      count_calls:
        type: integer
      from_date:
        type: string
      provider:
        type: string
      talk_minutes:
        type: number
      teams:
        items:
          $ref: '#/definitions/model.CDRReportTeam'
        type: array
      to_date:
        type: string
    type: object
  model.CDRReportRequest:
    properties:
      from_date:
        type: string
      teams:
        items:
          type: string
        type: array
      to_date:
        type: string
    type: object
  model.CDRReportTeam:
    properties:
      bill_summ:
        type: number
      talk_minutes:
        type: number
      team:
        type: string
    type: object
  model.CDRRequest:
    properties:
      callee:
        type: string
      callerid:
        type: string
      callid:
        type: string
      export:
        type: boolean
      from_date:
        type: string
      pids:
        items:
          type: integer
        type: array
      sip_code:
        type: string
      sip_reason:
        type: string
      teams:
        items:
          type: string
        type: array
      to_date:
        type: string
    type: object
  model.CallCheck:
    properties:
      from_date:
        type: string
      number:
        type: string
      to_date:
        type: string
    type: object
  model.DeleteAddressReply:
    properties:
      ip:
        type: string
      message:
        type: string
      provider_id:
        type: string
      status:
        type: string
    type: object
  model.DeleteReply:
    properties:
      status:
        type: string
    type: object
  model.EditProviderReply:
    properties:
      id:
        type: string
      message:
        type: string
      status:
        type: string
    type: object
  model.IPInfo:
    properties:
      address:
        items:
          type: string
        type: array
    type: object
  model.JsonResponse:
    properties:
      data: {}
      status:
        type: string
    type: object
  model.JsonResponseSwagger:
    properties:
      data:
        $ref: '#/definitions/model.CDRReport'
      status:
        type: string
    type: object
  model.ProviderDelete:
    properties:
      delete:
        type: string
    type: object
  model.ProviderEdit:
    properties:
      description:
        type: string
      ip:
        properties:
          address:
            items:
              type: string
            type: array
        type: object
      method:
        type: integer
      name:
        type: string
    type: object
  model.ProvidernoID:
    properties:
      description:
        type: string
      ip:
        $ref: '#/definitions/model.IPInfo'
      method:
        type: integer
      name:
        type: string
    type: object
  model.Providers:
    properties:
      description:
        type: string
      id:
        type: integer
      ip:
        $ref: '#/definitions/model.ProvidersAddress'
      method:
        type: integer
      name:
        type: string
    type: object
  model.ProvidersAddress:
    properties:
      address:
        items:
          type: string
        type: array
    type: object
  model.ProvidersAddressAdd:
    properties:
      ip:
        type: string
    type: object
  model.Reload:
    properties:
      reload:
        type: string
    type: object
  model.Routes:
    properties:
      cost:
        type: number
      description:
        type: string
      pid:
        type: integer
      prefix:
        type: string
      provider:
        type: string
      rid:
        type: integer
      step:
        type: integer
    type: object
info:
  contact: {}
  description: Swagger API for Golang Project MFDC
  title: MFDC Billing API
  version: "1.0"
paths:
  /cdr/{id}/report:
    post:
      consumes:
      - application/json
      description: If there are no arguments, you get all the data page by page. The
        arguments are used as filters, one or more.
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      - description: 'CDR Arguments, date format: 0000-00-00 00:00:00.000 +03'
        in: body
        name: cdr
        required: true
        schema:
          $ref: '#/definitions/model.CDRReportRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.JsonResponseSwagger'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get Summ
      tags:
      - CDR
  /cdr/list:
    post:
      consumes:
      - application/json
      description: If there are no arguments, you get all the data page by page. The
        arguments are used as filters, one or more.
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - description: 'CDR Arguments, date format: 0000-00-00 00:00:00.000 +03'
        in: body
        name: cdr
        required: true
        schema:
          $ref: '#/definitions/model.CDRRequest'
      - default: 100
        description: Number of rows per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.JsonResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get CDR
      tags:
      - CDR
  /config/reload:
    get:
      consumes:
      - application/json
      description: Reloading API configuration
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Reload'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Execute reload config
      tags:
      - Reload
  /csc:
    post:
      consumes:
      - application/json
      description: CDR get success call for period
      parameters:
      - description: Call
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.CallCheck'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.JsonResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: CDR get success call for period
      tags:
      - CDR
  /export/{id}:
    delete:
      consumes:
      - application/json
      description: Drop export task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DeleteReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Delete export task
      tags:
      - Export
  /export/list:
    get:
      consumes:
      - application/json
      description: Get a list of all exports with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Number per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.JsonResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Export list
      tags:
      - Export
  /providers/{id}:
    delete:
      consumes:
      - application/json
      description: Delete provider by ID
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.ProviderDelete'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Delete provider
      tags:
      - Providers
    get:
      consumes:
      - application/json
      description: Get provider by ID
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Providers'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Show one provider params
      tags:
      - Providers
  /providers/{id}/add:
    post:
      consumes:
      - application/json
      description: Add new IP to provider
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/model.ProvidersAddressAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.JsonResponse'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Add provider address
      tags:
      - Providers
  /providers/{id}/address:
    delete:
      consumes:
      - application/json
      description: Delete provider address
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      - description: Address
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/model.ProvidersAddressAdd'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DeleteAddressReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Delete address provider
      tags:
      - Providers
  /providers/{id}/edit:
    put:
      consumes:
      - application/json
      description: Edit provider params
      parameters:
      - description: Provider ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/model.ProviderEdit'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.EditProviderReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Edt provider
      tags:
      - Providers
  /providers/add:
    post:
      consumes:
      - application/json
      description: Create new provider
      parameters:
      - description: Provider
        in: body
        name: name
        required: true
        schema:
          $ref: '#/definitions/model.ProvidernoID'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AddProviderReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Add provider
      tags:
      - Providers
  /providers/all:
    get:
      consumes:
      - application/json
      description: Get list all provider
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Providers'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List providers
      tags:
      - Providers
  /routes/{id}:
    delete:
      consumes:
      - application/json
      description: Drop route
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.DeleteReply'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Delete route
      tags:
      - Routes
  /routes/{id}/edit:
    patch:
      consumes:
      - application/json
      description: Edit route params
      parameters:
      - description: Route ID
        in: path
        name: id
        required: true
        type: integer
      - description: Provider
        in: body
        name: ip
        required: true
        schema:
          $ref: '#/definitions/model.AddRoute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.AddRoute'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Edt route
      tags:
      - Routes
  /routes/add:
    post:
      consumes:
      - application/json
      description: Add new route
      parameters:
      - description: Route
        in: body
        name: route
        required: true
        schema:
          $ref: '#/definitions/model.AddRoute'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Routes'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Add routes
      tags:
      - Routes
  /routes/all:
    get:
      consumes:
      - application/json
      description: Get a list of all routes with pagination
      parameters:
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 100
        description: Number of routes per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Routes'
            type: array
      security:
      - ApiKeyAuth: []
      summary: List routes
      tags:
      - Routes
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-MFDC-Key
    type: apiKey
swagger: "2.0"
