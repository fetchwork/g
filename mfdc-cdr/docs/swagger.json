{
    "swagger": "2.0",
    "info": {
        "description": "Swagger API for Golang Project MFDC CDR",
        "title": "MFDC CDR API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/call/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get one call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Calls"
                ],
                "summary": "Execute get call",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/config/reload": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Reloading API configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Reload"
                ],
                "summary": "Execute reload config",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Reload"
                            }
                        }
                    }
                }
            }
        },
        "/csc": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "CDR get success call for period",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CDR"
                ],
                "summary": "CDR get success call for period",
                "parameters": [
                    {
                        "description": "Call",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CallCheck"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SwaggerStandartResponse"
                            }
                        }
                    }
                }
            }
        },
        "/file/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get file from S3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "File"
                ],
                "summary": "Execute get S3",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get a list of all routes with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "CDR"
                ],
                "summary": "List CDR",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 100,
                        "description": "Number of routes per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "description": "Provider",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CallHistoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.CDRJsonResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tags/add": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add new tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Add tag",
                "parameters": [
                    {
                        "description": "Tag name",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Tag"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SwaggerStandartResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tags/list": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Tags list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Tags list",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SwaggerDataResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tags/push": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Push tag to call",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Push tag to call",
                "parameters": [
                    {
                        "description": "CallRowID + TagID",
                        "name": "slice",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.TagInsert"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SwaggerStandartResponse"
                            }
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete tag",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tags"
                ],
                "summary": "Delete tag",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.SwaggerStandartResponse"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.CDRJsonResponse": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "data": {},
                "status": {
                    "type": "string"
                }
            }
        },
        "model.CallCheck": {
            "type": "object",
            "properties": {
                "from_date": {
                    "type": "string"
                },
                "number": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string"
                }
            }
        },
        "model.CallHistoryRequest": {
            "type": "object",
            "properties": {
                "destination": {
                    "type": "string"
                },
                "direction": {
                    "type": "string"
                },
                "from_date": {
                    "type": "string"
                },
                "from_number": {
                    "type": "string"
                },
                "from_type": {
                    "type": "string"
                },
                "hangup_by": {
                    "type": "string"
                },
                "has_children": {
                    "type": "boolean"
                },
                "min_talk_sec": {
                    "type": "integer"
                },
                "min_wait_sec": {
                    "type": "integer"
                },
                "number": {
                    "type": "string"
                },
                "queue": {
                    "type": "string"
                },
                "sip_code": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                },
                "team": {
                    "type": "string"
                },
                "to_date": {
                    "type": "string"
                },
                "to_number": {
                    "type": "string"
                },
                "to_type": {
                    "type": "string"
                }
            }
        },
        "model.Reload": {
            "type": "object",
            "properties": {
                "reload": {
                    "type": "string"
                }
            }
        },
        "model.SwaggerDataResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {}
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.SwaggerStandartResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.Tag": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "model.TagInsert": {
            "type": "object",
            "properties": {
                "call_row_id": {
                    "type": "integer"
                },
                "tag_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "X-MFDC-Key",
            "in": "header"
        }
    }
}